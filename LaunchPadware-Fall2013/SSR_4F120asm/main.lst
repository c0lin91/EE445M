


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Runs on LM4F120
    3 00000000         ; Provide functions that initialize a GPIO pin and turn 
                       it on and off.
    4 00000000         ; Use bit-banded I/O.
    5 00000000         ; Daniel Valvano
    6 00000000         ; May 18, 2013
    7 00000000         
    8 00000000         ; This example accompanies the book
    9 00000000         ;   "Embedded Systems: Introduction to ARM Cortex M Micr
                       ocontrollers"
   10 00000000         ;   ISBN: 978-1469998749, Jonathan Valvano, copyright (c
                       ) 2013
   11 00000000         ;   Volume 1 Program 4.3, Figure 4.14
   12 00000000         
   13 00000000         ;Copyright 2013 by Jonathan W. Valvano, valvano@mail.ute
                       xas.edu
   14 00000000         ;   You may use, edit, run or distribute this file
   15 00000000         ;   as long as the above copyright notice remains
   16 00000000         ;THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHET
                       HER EXPRESS, IMPLIED
   17 00000000         ;OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WA
                       RRANTIES OF
   18 00000000         ;MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE AP
                       PLY TO THIS SOFTWARE.
   19 00000000         ;VALVANO SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR 
                       SPECIAL, INCIDENTAL,
   20 00000000         ;OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   21 00000000         ;For more information about my classes, my research, and
                        my books, see
   22 00000000         ;http://users.ece.utexas.edu/~valvano/
   23 00000000         
   24 00000000         ; solid state relay connected to PF2
   25 00000000         
   26 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   27 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   28 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   29 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   30 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   31 00000000 40025528 
                       GPIO_PORTF_AMSEL_R
                               EQU              0x40025528
   32 00000000 4002552C 
                       GPIO_PORTF_PCTL_R
                               EQU              0x4002552C
   33 00000000 40025010 
                       PF2     EQU              0x40025010
   34 00000000 40025040 
                       PF4     EQU              0x40025040



ARM Macro Assembler    Page 2 


   35 00000000 400FE108 
                       SYSCTL_RCGC2_R
                               EQU              0x400FE108
   36 00000000 00000020 
                       SYSCTL_RCGC2_GPIOF
                               EQU              0x00000020  ; port F Clock Gati
                                                            ng Control
   37 00000000         
   38 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   39 00000000                 THUMB
   40 00000000                 EXPORT           Start
   41 00000000         ; This is an extremely simple test program to demonstrat
                       e that the SSR
   42 00000000         ; can turn on and off.  Button de-bouncing is not addres
                       sed.
   43 00000000         ; built-in negative logic switch connected to PF4
   44 00000000         Start
   45 00000000 F000 F82D       BL               SSR_Init    ; initialize PF2 an
                                                            d make it output
   46 00000004         ; set direction register
   47 00000004 492E            LDR              R1, =GPIO_PORTF_DIR_R ; R1 = &G
                                                            PIO_PORTF_DIR_R
   48 00000006 6808            LDR              R0, [R1]    ; R0 = [R1]
   49 00000008 F020 0010       BIC              R0, R0, #0x10 ; R0 = R0&~0x10 (
                                                            make PF4 input; PF4
                                                             built-in button #1
                                                            )
   50 0000000C 6008            STR              R0, [R1]    ; [R1] = R0
   51 0000000E         ; regular port function
   52 0000000E 492D            LDR              R1, =GPIO_PORTF_AFSEL_R ; R1 = 
                                                            &GPIO_PORTF_AFSEL_R
                                                            
   53 00000010 6808            LDR              R0, [R1]    ; R0 = [R1]
   54 00000012 F020 0010       BIC              R0, R0, #0x10 ; R0 = R0&~0x10 (
                                                            disable alt funct o
                                                            n PF4)
   55 00000016 6008            STR              R0, [R1]    ; [R1] = R0
   56 00000018         ; pull-up resistors on switch pins
   57 00000018 492B            LDR              R1, =GPIO_PORTF_PUR_R ; R1 = &G
                                                            PIO_PORTF_PUR_R
   58 0000001A 6808            LDR              R0, [R1]    ; R0 = [R1]
   59 0000001C F040 0010       ORR              R0, R0, #0x10 ; R0 = R0|0x10 (e
                                                            nable pull-up on PF
                                                            4)
   60 00000020 6008            STR              R0, [R1]    ; [R1] = R0
   61 00000022         ; enable digital port
   62 00000022 492A            LDR              R1, =GPIO_PORTF_DEN_R ; R1 = &G
                                                            PIO_PORTF_DEN_R
   63 00000024 6808            LDR              R0, [R1]    ; R0 = [R1]
   64 00000026 F040 0010       ORR              R0, R0, #0x10 ; R0 = R0|0x10 (e
                                                            nable digital I/O o
                                                            n PF4)
   65 0000002A 6008            STR              R0, [R1]    ; [R1] = R0
   66 0000002C         ; configure as GPIO
   67 0000002C 4928            LDR              R1, =GPIO_PORTF_PCTL_R ; R1 = &
                                                            GPIO_PORTF_PCTL_R
   68 0000002E 6808            LDR              R0, [R1]    ; R0 = [R1]
   69 00000030 F420 2070       BIC              R0, R0, #0x000F0000 ; R0 = R0&~



ARM Macro Assembler    Page 3 


                                                            0x000F0000 (clear p
                                                            ort control field f
                                                            or PF4)
   70 00000034 F100 0000       ADD              R0, R0, #0x00000000 ; R0 = R0+0
                                                            x00000000 (configur
                                                            e PF4 as GPIO)
   71 00000038 6008            STR              R0, [R1]    ; [R1] = R0
   72 0000003A 4C26            LDR              R4, =PF4    ; R4 = &PF4
   73 0000003C         loop                                 ; in this loop, the
                                                             appliance (PF2) to
                                                            ggles when the swit
                                                            ch is released
   74 0000003C F000 F830       BL               SSR_On
   75 00000040         waitforpress1                        ; proceed only when
                                                             the button is pres
                                                            sed
   76 00000040 6820            LDR              R0, [R4]    ; R0 = [R4] (read s
                                                            tatus of PF4)
   77 00000042 2810            CMP              R0, #0x10   ; R0 == 0x10?
   78 00000044 D0FC            BEQ              waitforpress1 ; if so, spin
   79 00000046         waitforrelease1                      ; proceed only when
                                                             the button is rele
                                                            ased
   80 00000046 6820            LDR              R0, [R4]    ; R0 = [R4] (read s
                                                            tatus of PF4)
   81 00000048 2810            CMP              R0, #0x10   ; R0 != 0x10?
   82 0000004A D1FC            BNE              waitforrelease1 ; if so, spin
   83 0000004C F000 F82D       BL               SSR_Off
   84 00000050         waitforpress2                        ; proceed only when
                                                             the button is pres
                                                            sed
   85 00000050 6820            LDR              R0, [R4]    ; R0 = [R4] (read s
                                                            tatus of PF4)
   86 00000052 2810            CMP              R0, #0x10   ; R0 == 0x10?
   87 00000054 D0FC            BEQ              waitforpress2 ; if so, spin
   88 00000056         waitforrelease2                      ; proceed only when
                                                             the button is rele
                                                            ased
   89 00000056 6820            LDR              R0, [R4]    ; R0 = [R4] (read s
                                                            tatus of PF4)
   90 00000058 2810            CMP              R0, #0x10   ; R0 != 0x10?
   91 0000005A D1FC            BNE              waitforrelease2 ; if so, spin
   92 0000005C E7EE            B                loop
   93 0000005E         
   94 0000005E         ;------------SSR_Init------------
   95 0000005E         ; Make PF2 an output, enable digital I/O, ensure alt. fu
                       nctions off.
   96 0000005E         ; Input: none
   97 0000005E         ; Output: none
   98 0000005E         ; Modifies: R0, R1
   99 0000005E         SSR_Init
  100 0000005E 491E            LDR              R1, =SYSCTL_RCGC2_R ; 1) activa
                                                            te clock for Port F
                                                            
  101 00000060 6808            LDR              R0, [R1]
  102 00000062 F040 0020       ORR              R0, R0, #0x20 ; set bit 5 to tu
                                                            rn on clock
  103 00000066 6008            STR              R0, [R1]
  104 00000068 BF00            NOP



ARM Macro Assembler    Page 4 


  105 0000006A BF00            NOP                          ; allow time for cl
                                                            ock to finish
  106 0000006C         ; 2) no need to unlock PF2
  107 0000006C 491B            LDR              R1, =GPIO_PORTF_AMSEL_R ; 3) di
                                                            sable analog functi
                                                            onality
  108 0000006E 6808            LDR              R0, [R1]
  109 00000070 F020 0004       BIC              R0, #0x04   ; 0 means analog is
                                                             off
  110 00000074 6008            STR              R0, [R1]
  111 00000076 4916            LDR              R1, =GPIO_PORTF_PCTL_R ; 4) con
                                                            figure as GPIO
  112 00000078 6808            LDR              R0, [R1]
  113 0000007A F420 6070       BIC              R0, #0x00000F00 ;  0 means conf
                                                            igure Port F as GPI
                                                            O
  114 0000007E 6008            STR              R0, [R1]
  115 00000080 490F            LDR              R1, =GPIO_PORTF_DIR_R ; 5) set 
                                                            direction register
  116 00000082 6808            LDR              R0, [R1]
  117 00000084 F040 0004       ORR              R0,#0x04    ; PF2 output
  118 00000088 6008            STR              R0, [R1]
  119 0000008A 490E            LDR              R1, =GPIO_PORTF_AFSEL_R ; 6) re
                                                            gular port function
                                                            
  120 0000008C 6808            LDR              R0, [R1]
  121 0000008E F020 0004       BIC              R0, #0x04   ; 0 means disable a
                                                            lternate function 
  122 00000092 6008            STR              R0, [R1]
  123 00000094 490D            LDR              R1, =GPIO_PORTF_DEN_R ; 7) enab
                                                            le Port F digital p
                                                            ort
  124 00000096 6808            LDR              R0, [R1]
  125 00000098 F040 0004       ORR              R0,#0x04    ; 1 means enable di
                                                            gital I/O
  126 0000009C 6008            STR              R0, [R1]
  127 0000009E 4770            BX               LR
  128 000000A0         ;------------SSR_On------------
  129 000000A0         ; Make PF2 high.
  130 000000A0         ; Input: none
  131 000000A0         ; Output: none
  132 000000A0         ; Modifies: R0, R1
  133 000000A0         SSR_On
  134 000000A0 490F            LDR              R1, =PF2    ; R1 = &PF2
  135 000000A2 F04F 0004       MOV              R0, #0x04   ; R0 = 0x04 (turn o
                                                            n the appliance)
  136 000000A6 6008            STR              R0, [R1]    ; [R1] = R0, write 
                                                            to PF2
  137 000000A8 4770            BX               LR          ; return
  138 000000AA         
  139 000000AA         ;------------SSR_Off------------
  140 000000AA         ; Make PF2 low.
  141 000000AA         ; Input: none
  142 000000AA         ; Output: none
  143 000000AA         ; Modifies: R0, R1
  144 000000AA         SSR_Off
  145 000000AA 490D            LDR              R1, =PF2    ; R1 = &PF2
  146 000000AC F04F 0000       MOV              R0, #0x00   ; R0 = 0x00 (turn o
                                                            ff the appliance)



ARM Macro Assembler    Page 5 


  147 000000B0 6008            STR              R0, [R1]    ; [R1] = R0, write 
                                                            to PF2
  148 000000B2 4770            BX               LR          ; return
  149 000000B4         
  150 000000B4         SSR_Toggle
  151 000000B4 490A            LDR              R1, =PF2    ; R1 is 0x40025010
  152 000000B6 6808            LDR              R0, [R1]    ; previous value
  153 000000B8 F080 0004       EOR              R0, R0, #0x04 ; flip bit 2
  154 000000BC 6008            STR              R0, [R1]    ; affect just PF2
  155 000000BE 4770            BX               LR
  156 000000C0         
  157 000000C0                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  158 000000C0                 END                          ; end of file
              40025400 
              40025420 
              40025510 
              4002551C 
              4002552C 
              40025040 
              400FE108 
              40025528 
              40025010 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=main.d -
omain.o -ID:\Keil\ARM\RV31\Inc -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\Lu
minary --predefine="__EVAL SETA 1" --list=main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 38 in file main.s
   Uses
      None
Comment: .text unused
SSR_Init 0000005E

Symbol: SSR_Init
   Definitions
      At line 99 in file main.s
   Uses
      At line 45 in file main.s
Comment: SSR_Init used once
SSR_Off 000000AA

Symbol: SSR_Off
   Definitions
      At line 144 in file main.s
   Uses
      At line 83 in file main.s
Comment: SSR_Off used once
SSR_On 000000A0

Symbol: SSR_On
   Definitions
      At line 133 in file main.s
   Uses
      At line 74 in file main.s
Comment: SSR_On used once
SSR_Toggle 000000B4

Symbol: SSR_Toggle
   Definitions
      At line 150 in file main.s
   Uses
      None
Comment: SSR_Toggle unused
Start 00000000

Symbol: Start
   Definitions
      At line 44 in file main.s
   Uses
      At line 40 in file main.s
Comment: Start used once
loop 0000003C

Symbol: loop
   Definitions
      At line 73 in file main.s
   Uses
      At line 92 in file main.s
Comment: loop used once
waitforpress1 00000040

Symbol: waitforpress1



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 75 in file main.s
   Uses
      At line 78 in file main.s
Comment: waitforpress1 used once
waitforpress2 00000050

Symbol: waitforpress2
   Definitions
      At line 84 in file main.s
   Uses
      At line 87 in file main.s
Comment: waitforpress2 used once
waitforrelease1 00000046

Symbol: waitforrelease1
   Definitions
      At line 79 in file main.s
   Uses
      At line 82 in file main.s
Comment: waitforrelease1 used once
waitforrelease2 00000056

Symbol: waitforrelease2
   Definitions
      At line 88 in file main.s
   Uses
      At line 91 in file main.s
Comment: waitforrelease2 used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 28 in file main.s
   Uses
      At line 52 in file main.s
      At line 119 in file main.s

GPIO_PORTF_AMSEL_R 40025528

Symbol: GPIO_PORTF_AMSEL_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 107 in file main.s
Comment: GPIO_PORTF_AMSEL_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 26 in file main.s
   Uses
      None
Comment: GPIO_PORTF_DATA_R unused
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 30 in file main.s
   Uses
      At line 62 in file main.s
      At line 123 in file main.s

GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 27 in file main.s
   Uses
      At line 47 in file main.s
      At line 115 in file main.s

GPIO_PORTF_PCTL_R 4002552C

Symbol: GPIO_PORTF_PCTL_R
   Definitions
      At line 32 in file main.s
   Uses
      At line 67 in file main.s
      At line 111 in file main.s

GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 29 in file main.s
   Uses
      At line 57 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Comment: GPIO_PORTF_PUR_R used once
PF2 40025010

Symbol: PF2
   Definitions
      At line 33 in file main.s
   Uses
      At line 134 in file main.s
      At line 145 in file main.s
      At line 151 in file main.s

PF4 40025040

Symbol: PF4
   Definitions
      At line 34 in file main.s
   Uses
      At line 72 in file main.s
Comment: PF4 used once
SYSCTL_RCGC2_GPIOF 00000020

Symbol: SYSCTL_RCGC2_GPIOF
   Definitions
      At line 36 in file main.s
   Uses
      None
Comment: SYSCTL_RCGC2_GPIOF unused
SYSCTL_RCGC2_R 400FE108

Symbol: SYSCTL_RCGC2_R
   Definitions
      At line 35 in file main.s
   Uses
      At line 100 in file main.s
Comment: SYSCTL_RCGC2_R used once
11 symbols
355 symbols in table

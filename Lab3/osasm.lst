


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************/
    2 00000000         ;/* OSasm.s: low-level OS commands, written in assembly 
                                             */
    3 00000000         ;// Real Time Operating System 
    4 00000000         
    5 00000000         ; This example accompanies the book
    6 00000000         ;  "Embedded Systems: Real Time Interfacing to the Arm C
                       ortex M3",
    7 00000000         ;  ISBN: 978-1463590154, Jonathan Valvano, copyright (c)
                        2011
    8 00000000         ;
    9 00000000         ;  Programs 6.4 through 6.12, section 6.2
   10 00000000         ;
   11 00000000         ;Copyright 2011 by Jonathan W. Valvano, valvano@mail.ute
                       xas.edu
   12 00000000         ;    You may use, edit, run or distribute this file
   13 00000000         ;    as long as the above copyright notice remains
   14 00000000         ; THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHE
                       THER EXPRESS, IMPLIED
   15 00000000         ; OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED W
                       ARRANTIES OF
   16 00000000         ; MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE A
                       PPLY TO THIS SOFTWARE.
   17 00000000         ; VALVANO SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR
                        SPECIAL, INCIDENTAL,
   18 00000000         ; OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   19 00000000         ; For more information about my classes, my research, an
                       d my books, see
   20 00000000         ; http://users.ece.utexas.edu/~valvano/
   21 00000000         ; */
   22 00000000         
   23 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   24 00000000                 THUMB
   25 00000000                 REQUIRE8
   26 00000000                 PRESERVE8
   27 00000000         
   28 00000000                 EXTERN           RunPt       ; currently running
                                                             thread
   29 00000000                 EXTERN           tempRunPt
   30 00000000         
   31 00000000                 EXPORT           OS_DisableInterrupts
   32 00000000                 EXPORT           OS_EnableInterrupts
   33 00000000         ;EXPORT  StartCritical
   34 00000000         ;EXPORT  EndCritical
   35 00000000                 EXPORT           StartOS
   36 00000000         ;EXPORT  SysTick_Handler
   37 00000000                 EXPORT           PendSV_Handler
   38 00000000         
   39 00000000 40024008 
                       PE1     equ              0x40024008
   40 00000000 E000ED04 
                       NVIC_INT_CTRL
                               EQU              0xE000ED04
   41 00000000 10000000 
                       NVIC_PENDSVSET
                               EQU              0x10000000
   42 00000000         



ARM Macro Assembler    Page 2 


   43 00000000         OS_DisableInterrupts
   44 00000000 B672            CPSID            I
   45 00000002 4770            BX               LR
   46 00000004         
   47 00000004         
   48 00000004         OS_EnableInterrupts
   49 00000004 B662            CPSIE            I
   50 00000006 4770            BX               LR
   51 00000008         
   52 00000008         ;*********** StartCritical************************
   53 00000008         ; make a copy of previous I bit, disable interrupts
   54 00000008         ; inputs:  none
   55 00000008         ; outputs: previous I bit
   56 00000008         StartCritical
   57 00000008 F3EF 8010       MRS              R0, PRIMASK ; Set prio int mask
                                                             to mask all (excep
                                                            t faults)
   58 0000000C B672            CPSID            I
   59 0000000E 4770            BX               LR
   60 00000010         
   61 00000010         
   62 00000010         ;*********** EndCritical************************
   63 00000010         ; using the copy of previous I bit, restore I bit to pre
                       vious value
   64 00000010         ; inputs:  previous I bit
   65 00000010         ; outputs: none
   66 00000010         EndCritical
   67 00000010 F380 8810       MSR              PRIMASK, R0
   68 00000014 4770            BX               LR
   69 00000016         
   70 00000016         PendSV_Handler                       ; 1) Saves R0-R3,R1
                                                            2,LR,PC,PSR
   71 00000016 B672            CPSID            I           ; 2) Prevent interr
                                                            upt during switch
   72 00000018         ;LDR  R1,=PE1
   73 00000018         ;LDR  R0,[R1]
   74 00000018         ;EOR  R0,#0x02
   75 00000018         ;STR  R0,[R1]
   76 00000018 E92D 0FF0       PUSH             {R4-R11}    ; 3) Save remaining
                                                             regs r4-11
   77 0000001C 480E            LDR              R0, =RunPt  ; 4) R0=pointer to 
                                                            RunPt, old thread
   78 0000001E 6801            LDR              R1, [R0]    ;    R1 = RunPt
   79 00000020 F8C1 D000       STR              SP, [R1]    ; 5) Save SP into T
                                                            CB
   80 00000024 490D            LDR              R1, =tempRunPt
   81 00000026 6809            LDR              R1, [R1]    ; 6) R1 = RunPt->ne
                                                            xt
   82 00000028 6001            STR              R1, [R0]    ;    RunPt = R1
   83 0000002A F8D1 D000       LDR              SP, [R1]    ; 7) new thread SP;
                                                             SP = RunPt->sp;
   84 0000002E E8BD 0FF0       POP              {R4-R11}    ; 8) restore regs r
                                                            4-11
   85 00000032         ;LDR  R1,=PE1
   86 00000032         ;LDR  R0,[R1]
   87 00000032         ;EOR  R0,#0x02
   88 00000032         ;STR  R0,[R1]
   89 00000032 B662            CPSIE            I           ; 9) tasks run with
                                                             interrupts enabled



ARM Macro Assembler    Page 3 


                                                             
   90 00000034 4770            BX               LR
   91 00000036         
   92 00000036         StartOS
   93 00000036 4808            LDR              R0, =RunPt  ; currently running
                                                             thread
   94 00000038 6802            LDR              R2, [R0]    ; R2 = value of Run
                                                            Pt
   95 0000003A F8D2 D000       LDR              SP, [R2]    ; new thread SP; SP
                                                             = RunPt->stackPoin
                                                            ter;
   96 0000003E E8BD 0FF0       POP              {R4-R11}    ; restore regs r4-1
                                                            1
   97 00000042 BC0F            POP              {R0-R3}     ; restore regs r0-3
                                                            
   98 00000044 F85D CB04       POP              {R12}
   99 00000048 F85D EB04       POP              {LR}        ; discard LR from i
                                                            nitial stack
  100 0000004C F85D EB04       POP              {LR}        ; start location
  101 00000050 BC02            POP              {R1}        ; discard PSR
  102 00000052 B662            CPSIE            I           ; Enable interrupts
                                                             at processor level
                                                            
  103 00000054 4770            BX               LR          ; start first threa
                                                            d
  104 00000056         
  105 00000056 00 00           ALIGN
  106 00000058                 END
              00000000 
              00000000 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\osasm.
d -o.\osasm.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\
Inc\TI\TM4C123 --predefine="__EVAL SETA 1" --list=.\osasm.lst osasm.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 23 in file osasm.s
   Uses
      None
Comment: .text unused
EndCritical 00000010

Symbol: EndCritical
   Definitions
      At line 66 in file osasm.s
   Uses
      None
Comment: EndCritical unused
OS_DisableInterrupts 00000000

Symbol: OS_DisableInterrupts
   Definitions
      At line 43 in file osasm.s
   Uses
      At line 31 in file osasm.s
Comment: OS_DisableInterrupts used once
OS_EnableInterrupts 00000004

Symbol: OS_EnableInterrupts
   Definitions
      At line 48 in file osasm.s
   Uses
      At line 32 in file osasm.s
Comment: OS_EnableInterrupts used once
PendSV_Handler 00000016

Symbol: PendSV_Handler
   Definitions
      At line 70 in file osasm.s
   Uses
      At line 37 in file osasm.s
Comment: PendSV_Handler used once
StartCritical 00000008

Symbol: StartCritical
   Definitions
      At line 56 in file osasm.s
   Uses
      None
Comment: StartCritical unused
StartOS 00000036

Symbol: StartOS
   Definitions
      At line 92 in file osasm.s
   Uses
      At line 35 in file osasm.s
Comment: StartOS used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NVIC_INT_CTRL E000ED04

Symbol: NVIC_INT_CTRL
   Definitions
      At line 40 in file osasm.s
   Uses
      None
Comment: NVIC_INT_CTRL unused
NVIC_PENDSVSET 10000000

Symbol: NVIC_PENDSVSET
   Definitions
      At line 41 in file osasm.s
   Uses
      None
Comment: NVIC_PENDSVSET unused
PE1 40024008

Symbol: PE1
   Definitions
      At line 39 in file osasm.s
   Uses
      None
Comment: PE1 unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

RunPt 00000000

Symbol: RunPt
   Definitions
      At line 28 in file osasm.s
   Uses
      At line 77 in file osasm.s
      At line 93 in file osasm.s

tempRunPt 00000000

Symbol: tempRunPt
   Definitions
      At line 29 in file osasm.s
   Uses
      At line 80 in file osasm.s
Comment: tempRunPt used once
2 symbols
345 symbols in table

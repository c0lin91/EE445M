


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Runs on LM4F120
    3 00000000         ; Provide a brief introduction to the floating point uni
                       t
    4 00000000         ; Jonathan Valvano
    5 00000000         ; April 27, 2013
    6 00000000         
    7 00000000         ;  This example accompanies the book
    8 00000000         ;   "Embedded Systems: Introduction to ARM Cortex M Micr
                       ocontrollers"
    9 00000000         ;   ISBN: 978-1469998749, Jonathan Valvano, copyright (c
                       ) 2013
   10 00000000         ;   Example zz
   11 00000000         ;
   12 00000000         ;Copyright 2013 by Jonathan W. Valvano, valvano@mail.ute
                       xas.edu
   13 00000000         ;   You may use, edit, run or distribute this file
   14 00000000         ;   as long as the above copyright notice remains
   15 00000000         ;THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHET
                       HER EXPRESS, IMPLIED
   16 00000000         ;OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WA
                       RRANTIES OF
   17 00000000         ;MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE AP
                       PLY TO THIS SOFTWARE.
   18 00000000         ;VALVANO SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR 
                       SPECIAL, INCIDENTAL,
   19 00000000         ;OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   20 00000000         ;For more information about my classes, my research, and
                        my books, see
   21 00000000         ;http://users.ece.utexas.edu/~valvano/
   22 00000000                 AREA             DATA, ALIGN=2
   23 00000000 00 00 00 
              00       ten     SPACE            4
   24 00000004 00 00 00 
              00       tenth   SPACE            4
   25 00000008 00 00 00 
              00       In      SPACE            4
   26 0000000C 00 00 00 
              00       A       SPACE            4
   27 00000010         
   28 00000010 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 2 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    Buffer  SPACE            80          ; results of circle
                                                             test
   29 00000060                 EXPORT           ten [DATA,SIZE=4]
   30 00000060                 EXPORT           tenth [DATA,SIZE=4]
   31 00000060                 EXPORT           Buffer [DATA,SIZE=80]
   32 00000060         
   33 00000060                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   34 00000000                 THUMB
   35 00000000                 EXPORT           Start
   36 00000000         ; FPU already initialized in this start.s
   37 00000000         Start
   38 00000000 EEB2 0A04       VLDR.F32         S0,=10.0    ;the example from t
                                                            he book
   39 00000004 481B            LDR              R0,=ten
   40 00000006 ED80 0A00       VSTR.F32         S0,[R0]
   41 0000000A         ; 10 = (0,0x82,0x200000) = (0,10000010,01000000000000000
                       000000)
   42 0000000A EDDF 0A1B       VLDR.F32         S1,=0.1     ;another example fr
                                                            om the book
   43 0000000E 481B            LDR              R0,=tenth
   44 00000010 EDC0 0A00       VSTR.F32         S1,[R0]
   45 00000014         ; 0.1 about (0,0x7B,0x4CCCCD) = (0,01111011,100110011001
                       10011001101)
   46 00000014         
   47 00000014 ED9F 1A1A       VLDR.F32         S2,=0.0
   48 00000018 EEF6 1A00       VLDR.F32         S3,=0.5
   49 0000001C         
   50 0000001C 4819            LDR              R0,=In
   51 0000001E EDC0 1A00       VSTR.F32         S3,[R0]     ;In = 0.5
   52 00000022 F000 F810       BL               Test
   53 00000026 ED9F 2A18       VLDR.F32         S4,=0.785398 ;pi/4 
   54 0000002A         
   55 0000002A 4C18            LDR              R4,=Buffer
   56 0000002C F04F 0514       MOV              R5,#20
   57 00000030         
   58 00000030         loop
   59 00000030 EEB0 0A41       VMOV.F32         S0,S2       ; set input paramet
                                                            er
   60 00000034 F000 F811       BL               CircleArea
   61 00000038 ECA4 0A01       VSTR.F32         S0,[R4],#4
   62 0000003C EE31 1A21       VADD.F32         S2,S2,S3    ; next input
   63 00000040 3D01            SUBS             R5,#1
   64 00000042 D1F5            BNE              loop
   65 00000044 E7FE    done    B                done
   66 00000046         
   67 00000046 B500    Test    PUSH             {LR}
   68 00000048 480E            LDR              R0,=In
   69 0000004A ED90 0A00       VLDR.F32         S0,[R0]     ;S0 is In
   70 0000004E F000 F804       BL               CircleArea
   71 00000052 480F            LDR              R0,=A
   72 00000054 ED80 0A00       VSTR.F32         S0,[R0]     ;A=pi*In*In



ARM Macro Assembler    Page 3 


   73 00000058 BD00            POP              {PC}
   74 0000005A         
   75 0000005A         ; Calculate the area of a circle
   76 0000005A         ; Input: S0 is the radius of the circle
   77 0000005A         ; Output: S0 is the area of the circle
   78 0000005A         CircleArea
   79 0000005A EE20 0A00       VMUL.F32         S0,S0,S0    ; input squared
   80 0000005E EDDF 0A0D       VLDR.F32         S1,=3.14159265
   81 00000062 EE20 0A20       VMUL.F32         S0,S0,S1    ; pi*r*r
   82 00000066 4770            BX               LR
   83 00000068         
   84 00000068 E000ED88 
                       NVIC_CPAC_R
                               equ              0xE000ED88
   85 00000068         EnableFPU
   86 00000068 480B            LDR              R0, =NVIC_CPAC_R
   87 0000006A 6801            LDR              R1, [R0]    ; Read CPACR
   88 0000006C F441 0170       ORR              R1, R1, #0x00F00000 ; Set bits 
                                                            20-23 to enable CP1
                                                            0 and CP11 coproces
                                                            sors
   89 00000070 6001            STR              R1, [R0]
   90 00000072 4770            BX               LR
   91 00000074         
   92 00000074                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
   93 00000074                 END                          ; end of file
              00000000 
              3DCCCCCD 
              00000000 
              00000000 
              00000000 
              3F490FD8 
              00000000 
              00000000 
              40490FDB 
              E000ED88 
Command Line: --debug --xref --cpu=Cortex-M4.fp --apcs=interwork --depend=main.
d -omain.o -ID:\Keil\ARM\RV31\Inc -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc
\Luminary --predefine="__EVAL SETA 1" --list=main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

A 0000000C

Symbol: A
   Definitions
      At line 26 in file main.s
   Uses
      At line 71 in file main.s
Comment: A used once
Buffer 00000010

Symbol: Buffer
   Definitions
      At line 28 in file main.s
   Uses
      At line 31 in file main.s
      At line 55 in file main.s

DATA 00000000

Symbol: DATA
   Definitions
      At line 22 in file main.s
   Uses
      None
Comment: DATA unused
In 00000008

Symbol: In
   Definitions
      At line 25 in file main.s
   Uses
      At line 50 in file main.s
      At line 68 in file main.s

ten 00000000

Symbol: ten
   Definitions
      At line 23 in file main.s
   Uses
      At line 29 in file main.s
      At line 39 in file main.s

tenth 00000004

Symbol: tenth
   Definitions
      At line 24 in file main.s
   Uses
      At line 30 in file main.s
      At line 43 in file main.s

6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 33 in file main.s
   Uses
      None
Comment: .text unused
CircleArea 0000005A

Symbol: CircleArea
   Definitions
      At line 78 in file main.s
   Uses
      At line 60 in file main.s
      At line 70 in file main.s

EnableFPU 00000068

Symbol: EnableFPU
   Definitions
      At line 85 in file main.s
   Uses
      None
Comment: EnableFPU unused
Start 00000000

Symbol: Start
   Definitions
      At line 37 in file main.s
   Uses
      At line 35 in file main.s
Comment: Start used once
Test 00000046

Symbol: Test
   Definitions
      At line 67 in file main.s
   Uses
      At line 52 in file main.s
Comment: Test used once
done 00000044

Symbol: done
   Definitions
      At line 65 in file main.s
   Uses
      At line 65 in file main.s
Comment: done used once
loop 00000030

Symbol: loop
   Definitions
      At line 58 in file main.s
   Uses
      At line 64 in file main.s
Comment: loop used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NVIC_CPAC_R E000ED88

Symbol: NVIC_CPAC_R
   Definitions
      At line 84 in file main.s
   Uses
      At line 86 in file main.s
Comment: NVIC_CPAC_R used once
1 symbol
348 symbols in table
